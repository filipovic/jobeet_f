<?php

/* WebProfilerBundle:Router:panel.html.twig */
class __TwigTemplate_8430163e02a11b2ad9e3b92924c74a2a042da1d95a44e891bb407ea977f5b242 extends Twig_Template
{
    public function __construct(Twig_Environment $env)
    {
        parent::__construct($env);

        $this->parent = false;

        $this->blocks = array(
        );
    }

    protected function doDisplay(array $context, array $blocks = array())
    {
        // line 1
        echo "<h2>Routing for \"";
        echo twig_escape_filter($this->env, $this->getAttribute($this->getContext($context, "request"), "pathinfo"), "html", null, true);
        echo "\"</h2>

<ul>
    <li>
        <strong>Route:&nbsp;</strong>
        ";
        // line 6
        if ($this->getAttribute($this->getContext($context, "request"), "route")) {
            // line 7
            echo "            ";
            echo twig_escape_filter($this->env, $this->getAttribute($this->getContext($context, "request"), "route"), "html", null, true);
            echo "
        ";
        } else {
            // line 9
            echo "            <em>No matching route</em>
        ";
        }
        // line 11
        echo "    </li>
    <li>
        <strong>Route parameters:&nbsp;</strong>
        ";
        // line 14
        if (twig_length_filter($this->env, $this->getAttribute($this->getContext($context, "request"), "routeParams"))) {
            // line 15
            echo "            ";
            $this->env->loadTemplate("@WebProfiler/Profiler/table.html.twig")->display(array("data" => $this->getAttribute($this->getContext($context, "request"), "routeParams"), "class" => "inline"));
            // line 16
            echo "        ";
        } else {
            // line 17
            echo "            <em>No parameters</em>
        ";
        }
        // line 19
        echo "    </li>
    ";
        // line 20
        if ($this->getAttribute($this->getContext($context, "router"), "redirect")) {
            // line 21
            echo "    <li>
        <strong>Redirecting to:&nbsp;</strong> \"";
            // line 22
            echo twig_escape_filter($this->env, $this->getAttribute($this->getContext($context, "router"), "targetUrl"), "html", null, true);
            echo "\" ";
            if ($this->getAttribute($this->getContext($context, "router"), "targetRoute")) {
                echo "(route: \"";
                echo twig_escape_filter($this->env, $this->getAttribute($this->getContext($context, "router"), "targetRoute"), "html", null, true);
                echo "\")";
            }
            // line 23
            echo "    <li>
    ";
        }
        // line 25
        echo "    <li>
        <strong>Route matching logs</strong>
        <table class=\"routing inline\">
            <tr>
                <th>Route name</th>
                <th>Pattern</th>
                <th>Log</th>
            </tr>
            ";
        // line 33
        $context['_parent'] = (array) $context;
        $context['_seq'] = twig_ensure_traversable($this->getContext($context, "traces"));
        foreach ($context['_seq'] as $context["_key"] => $context["trace"]) {
            // line 34
            echo "                <tr class=\"";
            echo (((1 == $this->getAttribute($this->getContext($context, "trace"), "level"))) ? ("almost") : ((((2 == $this->getAttribute($this->getContext($context, "trace"), "level"))) ? ("matches") : (""))));
            echo "\">
                    <td>";
            // line 35
            echo twig_escape_filter($this->env, $this->getAttribute($this->getContext($context, "trace"), "name"), "html", null, true);
            echo "</td>
                    <td>";
            // line 36
            echo twig_escape_filter($this->env, $this->getAttribute($this->getContext($context, "trace"), "path"), "html", null, true);
            echo "</td>
                    <td>";
            // line 37
            echo twig_escape_filter($this->env, $this->getAttribute($this->getContext($context, "trace"), "log"), "html", null, true);
            echo "</td>
                </tr>
            ";
        }
        $_parent = $context['_parent'];
        unset($context['_seq'], $context['_iterated'], $context['_key'], $context['trace'], $context['_parent'], $context['loop']);
        $context = array_intersect_key($context, $_parent) + $_parent;
        // line 40
        echo "        </table>
        <em><small>Note: The above matching is based on the configuration for the current router which might differ from
        the configuration used while routing this request.</small></em>
    </li>
</ul>
";
    }

    public function getTemplateName()
    {
        return "WebProfilerBundle:Router:panel.html.twig";
    }

    public function isTraitable()
    {
        return false;
    }

    public function getDebugInfo()
    {
        return array (  356 => 328,  797 => 266,  794 => 265,  789 => 260,  782 => 256,  776 => 253,  772 => 251,  770 => 250,  767 => 249,  761 => 247,  759 => 246,  756 => 245,  750 => 243,  748 => 242,  745 => 241,  739 => 239,  737 => 238,  734 => 237,  728 => 235,  726 => 234,  723 => 233,  720 => 232,  716 => 187,  710 => 186,  696 => 182,  691 => 181,  688 => 180,  683 => 179,  680 => 178,  667 => 164,  661 => 162,  658 => 161,  655 => 160,  649 => 157,  645 => 156,  642 => 155,  636 => 154,  631 => 151,  625 => 150,  617 => 148,  614 => 147,  610 => 146,  602 => 143,  600 => 142,  597 => 141,  594 => 140,  587 => 139,  572 => 135,  569 => 134,  566 => 133,  563 => 131,  547 => 128,  544 => 127,  536 => 125,  533 => 124,  519 => 160,  515 => 158,  512 => 157,  503 => 121,  487 => 115,  482 => 114,  479 => 113,  472 => 77,  462 => 75,  459 => 74,  451 => 71,  433 => 65,  417 => 59,  405 => 56,  391 => 50,  372 => 37,  317 => 230,  301 => 222,  290 => 217,  231 => 199,  370 => 36,  343 => 91,  330 => 87,  327 => 86,  320 => 231,  313 => 82,  310 => 81,  287 => 216,  271 => 66,  262 => 63,  180 => 104,  12 => 34,  568 => 179,  553 => 129,  545 => 173,  540 => 171,  534 => 169,  532 => 168,  517 => 161,  507 => 123,  488 => 153,  477 => 150,  470 => 135,  467 => 134,  463 => 133,  460 => 132,  449 => 123,  446 => 69,  426 => 102,  419 => 98,  410 => 96,  392 => 83,  388 => 107,  386 => 95,  382 => 93,  380 => 83,  369 => 136,  367 => 99,  333 => 272,  302 => 78,  296 => 76,  226 => 197,  316 => 121,  299 => 112,  293 => 75,  284 => 106,  281 => 105,  279 => 104,  275 => 77,  210 => 75,  174 => 60,  399 => 158,  394 => 156,  359 => 140,  357 => 32,  352 => 30,  348 => 136,  345 => 135,  325 => 125,  308 => 226,  276 => 211,  270 => 209,  245 => 203,  239 => 201,  237 => 86,  234 => 84,  202 => 194,  167 => 60,  155 => 55,  681 => 404,  676 => 168,  664 => 394,  659 => 392,  650 => 388,  639 => 380,  633 => 377,  629 => 376,  613 => 366,  605 => 144,  595 => 354,  588 => 350,  581 => 137,  577 => 344,  575 => 341,  567 => 337,  557 => 177,  550 => 326,  542 => 321,  538 => 319,  531 => 312,  526 => 164,  514 => 306,  509 => 124,  492 => 295,  481 => 290,  466 => 76,  456 => 273,  452 => 272,  445 => 267,  443 => 261,  429 => 255,  424 => 254,  422 => 250,  415 => 97,  396 => 157,  383 => 150,  366 => 142,  346 => 28,  331 => 265,  304 => 79,  267 => 98,  257 => 61,  253 => 95,  213 => 126,  58 => 18,  150 => 100,  134 => 94,  194 => 190,  127 => 60,  344 => 318,  340 => 22,  338 => 94,  335 => 129,  315 => 83,  295 => 275,  288 => 108,  259 => 70,  249 => 55,  190 => 188,  161 => 70,  701 => 183,  695 => 210,  692 => 209,  690 => 410,  684 => 205,  674 => 397,  669 => 202,  657 => 200,  654 => 390,  651 => 198,  643 => 381,  640 => 192,  623 => 373,  606 => 189,  601 => 187,  596 => 186,  593 => 185,  590 => 184,  584 => 138,  580 => 178,  578 => 136,  573 => 340,  556 => 130,  539 => 126,  535 => 172,  530 => 171,  527 => 123,  524 => 169,  521 => 169,  518 => 307,  516 => 166,  513 => 160,  504 => 158,  500 => 120,  498 => 157,  495 => 155,  493 => 116,  490 => 154,  486 => 292,  471 => 129,  468 => 128,  455 => 147,  450 => 145,  441 => 67,  439 => 260,  434 => 138,  420 => 249,  418 => 128,  404 => 124,  395 => 51,  389 => 118,  377 => 82,  371 => 144,  361 => 33,  358 => 106,  349 => 29,  347 => 118,  342 => 317,  339 => 316,  336 => 99,  332 => 88,  329 => 126,  326 => 262,  324 => 232,  321 => 123,  319 => 90,  311 => 227,  307 => 115,  297 => 276,  291 => 109,  289 => 109,  282 => 213,  277 => 68,  272 => 76,  250 => 206,  233 => 62,  228 => 83,  223 => 196,  191 => 69,  178 => 172,  175 => 76,  76 => 27,  318 => 122,  306 => 225,  303 => 139,  300 => 113,  292 => 218,  286 => 80,  280 => 69,  274 => 77,  263 => 71,  256 => 208,  242 => 140,  192 => 23,  185 => 20,  170 => 61,  165 => 59,  20 => 1,  53 => 17,  137 => 95,  97 => 41,  34 => 18,  126 => 55,  118 => 46,  114 => 50,  70 => 24,  90 => 37,  110 => 22,  84 => 27,  65 => 22,  265 => 64,  260 => 62,  248 => 115,  236 => 63,  232 => 84,  216 => 25,  211 => 84,  195 => 77,  188 => 178,  184 => 48,  152 => 63,  100 => 36,  81 => 84,  172 => 52,  153 => 48,  146 => 34,  113 => 40,  148 => 44,  104 => 37,  77 => 25,  225 => 83,  222 => 81,  218 => 77,  215 => 78,  205 => 195,  200 => 193,  197 => 56,  186 => 54,  181 => 173,  160 => 52,  129 => 56,  124 => 43,  23 => 12,  480 => 151,  474 => 149,  469 => 158,  461 => 149,  457 => 131,  453 => 72,  444 => 142,  440 => 148,  437 => 66,  435 => 258,  430 => 103,  427 => 62,  423 => 60,  413 => 134,  409 => 58,  407 => 95,  402 => 55,  398 => 121,  393 => 119,  387 => 48,  384 => 116,  381 => 120,  379 => 119,  374 => 81,  368 => 112,  365 => 34,  362 => 141,  360 => 109,  355 => 95,  341 => 105,  337 => 103,  322 => 101,  314 => 99,  312 => 177,  309 => 117,  305 => 115,  298 => 173,  294 => 111,  285 => 81,  283 => 70,  278 => 115,  268 => 73,  264 => 72,  258 => 81,  252 => 68,  247 => 66,  241 => 31,  229 => 198,  220 => 65,  214 => 61,  177 => 63,  169 => 58,  140 => 96,  132 => 57,  128 => 44,  107 => 48,  61 => 23,  273 => 210,  269 => 75,  254 => 60,  243 => 68,  240 => 86,  238 => 139,  235 => 74,  230 => 105,  227 => 80,  224 => 102,  221 => 78,  219 => 129,  217 => 79,  208 => 60,  204 => 73,  179 => 72,  159 => 49,  143 => 48,  135 => 62,  119 => 31,  102 => 33,  71 => 23,  67 => 22,  63 => 21,  59 => 22,  87 => 33,  94 => 34,  89 => 30,  85 => 23,  75 => 28,  68 => 12,  56 => 16,  28 => 6,  38 => 12,  24 => 3,  26 => 6,  21 => 2,  31 => 8,  25 => 35,  201 => 57,  196 => 191,  183 => 82,  171 => 113,  166 => 57,  163 => 60,  158 => 79,  156 => 57,  151 => 45,  142 => 42,  138 => 50,  136 => 39,  121 => 52,  117 => 19,  105 => 18,  91 => 34,  62 => 21,  49 => 13,  19 => 1,  93 => 38,  88 => 31,  78 => 18,  46 => 13,  44 => 11,  27 => 7,  79 => 29,  72 => 27,  69 => 26,  47 => 15,  40 => 11,  37 => 7,  22 => 2,  246 => 54,  157 => 58,  145 => 56,  139 => 63,  131 => 61,  123 => 59,  120 => 20,  115 => 40,  111 => 41,  108 => 47,  101 => 43,  98 => 34,  96 => 35,  83 => 31,  74 => 27,  66 => 25,  55 => 38,  52 => 14,  50 => 16,  43 => 11,  41 => 10,  35 => 9,  32 => 7,  29 => 3,  209 => 24,  203 => 122,  199 => 53,  193 => 70,  189 => 71,  187 => 49,  182 => 64,  176 => 120,  173 => 119,  168 => 60,  164 => 111,  162 => 110,  154 => 46,  149 => 62,  147 => 46,  144 => 98,  141 => 66,  133 => 51,  130 => 35,  125 => 40,  122 => 44,  116 => 47,  112 => 47,  109 => 45,  106 => 45,  103 => 44,  99 => 45,  95 => 39,  92 => 28,  86 => 25,  82 => 28,  80 => 29,  73 => 23,  64 => 21,  60 => 20,  57 => 19,  54 => 19,  51 => 37,  48 => 16,  45 => 14,  42 => 13,  39 => 10,  36 => 9,  33 => 6,  30 => 7,);
    }
}
